
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.RegistrationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  FirstName: 'FirstName',
  LastName: 'LastName',
  primaryEmailId: 'primaryEmailId',
  secondaryEmailId: 'secondaryEmailId',
  Gender: 'Gender',
  DateofBirth: 'DateofBirth',
  startingYear: 'startingYear',
  YearofPassing: 'YearofPassing',
  Institution: 'Institution',
  Degree: 'Degree',
  Specialization: 'Specialization',
  optedForHigherEducationfromOtherInstitues: 'optedForHigherEducationfromOtherInstitues',
  highestLevelOfEduction: 'highestLevelOfEduction',
  UniversityofHigherEducdation: 'UniversityofHigherEducdation',
  Company: 'Company',
  Title: 'Title',
  Industry: 'Industry',
  WorkExp: 'WorkExp',
  PlaceofWork: 'PlaceofWork',
  Skills: 'Skills'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.GENDER = exports.$Enums.GENDER = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER'
};

exports.Institutes = exports.$Enums.Institutes = {
  Parul_Institue_of_Engineering_and_Technology: 'Parul_Institue_of_Engineering_and_Technology',
  Parul_Institue_of_Technology: 'Parul_Institue_of_Technology',
  Parul_Institue_of_Design: 'Parul_Institue_of_Design',
  Parul_Institute_of_Management: 'Parul_Institute_of_Management',
  Parul_Institute_of_Design: 'Parul_Institute_of_Design',
  Parul_Institute_of_Applied_Sciences: 'Parul_Institute_of_Applied_Sciences',
  Parul_Institute_of_Medical_Science_and_Research: 'Parul_Institute_of_Medical_Science_and_Research',
  Parul_Institute_of_Pharmacy_and_Research: 'Parul_Institute_of_Pharmacy_and_Research',
  Parul_Institute_of_Ayurveda_and_Research: 'Parul_Institute_of_Ayurveda_and_Research',
  Parul_Institute_of_Hotel_Management_and_Catering_Technology: 'Parul_Institute_of_Hotel_Management_and_Catering_Technology',
  Parul_Polytechnic_Institute: 'Parul_Polytechnic_Institute'
};

exports.Degree = exports.$Enums.Degree = {
  BTech: 'BTech',
  MTech: 'MTech',
  PhD: 'PhD',
  BSc: 'BSc',
  MSc: 'MSc',
  Pharmacy: 'Pharmacy',
  MBA: 'MBA'
};

exports.LevelofEduction = exports.$Enums.LevelofEduction = {
  Graduate: 'Graduate',
  PostGraduate: 'PostGraduate',
  Doctorate: 'Doctorate'
};

exports.Prisma.ModelName = {
  Registration: 'Registration'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/nitish/FinalYearProject/Final_Year_Proj/backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/nitish/FinalYearProject/Final_Year_Proj/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.7.0",
  "engineVersion": "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum GENDER {\n  MALE\n  FEMALE\n  OTHER\n}\n\nenum Institutes {\n  Parul_Institue_of_Engineering_and_Technology\n  Parul_Institue_of_Technology\n  Parul_Institue_of_Design\n  Parul_Institute_of_Management\n  Parul_Institute_of_Design\n  Parul_Institute_of_Applied_Sciences\n  Parul_Institute_of_Medical_Science_and_Research\n  Parul_Institute_of_Pharmacy_and_Research\n  Parul_Institute_of_Ayurveda_and_Research\n  Parul_Institute_of_Hotel_Management_and_Catering_Technology\n  Parul_Polytechnic_Institute\n}\n\nenum Degree {\n  BTech\n  MTech\n  PhD\n  BSc\n  MSc\n  Pharmacy\n  MBA\n}\n\nenum LevelofEduction {\n  Graduate\n  PostGraduate\n  Doctorate\n}\n\nmodel Registration {\n  id                                        String          @id @default(auto()) @map(\"_id\") @db.ObjectId\n  email                                     String          @unique\n  FirstName                                 String?\n  LastName                                  String?\n  primaryEmailId                            String          @unique\n  secondaryEmailId                          String          @unique\n  Gender                                    GENDER\n  DateofBirth                               DateTime\n  startingYear                              BigInt\n  YearofPassing                             BigInt?\n  Institution                               Institutes\n  Degree                                    Degree\n  Specialization                            String\n  optedForHigherEducationfromOtherInstitues Boolean         @default(false)\n  highestLevelOfEduction                    LevelofEduction\n  UniversityofHigherEducdation              String?\n  Company                                   String?\n  Title                                     String?\n  Industry                                  String?\n  WorkExp                                   Int?\n  PlaceofWork                               String?\n  Skills                                    String[]\n  currentAddress                            Address\n}\n\ntype Address {\n  placeOfWork String\n  state       String\n  city        String\n}\n",
  "inlineSchemaHash": "8150e72eaa41cad210ed5032dfbc7ec51df9b9ab8ff04b95bbeff7a1f4318161",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Registration\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"id\",\"dbName\":\"_id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"String\",\"nativeType\":[\"ObjectId\",[]],\"default\":{\"name\":\"auto\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"email\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"FirstName\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"LastName\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"primaryEmailId\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"secondaryEmailId\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Gender\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"GENDER\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"DateofBirth\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"startingYear\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"BigInt\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"YearofPassing\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"BigInt\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Institution\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Institutes\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Degree\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Degree\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Specialization\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"optedForHigherEducationfromOtherInstitues\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Boolean\",\"nativeType\":null,\"default\":false,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"highestLevelOfEduction\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"LevelofEduction\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"UniversityofHigherEducdation\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Company\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Title\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Industry\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"WorkExp\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"PlaceofWork\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Skills\",\"kind\":\"scalar\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"currentAddress\",\"kind\":\"object\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Address\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false}},\"enums\":{\"GENDER\":{\"values\":[{\"name\":\"MALE\",\"dbName\":null},{\"name\":\"FEMALE\",\"dbName\":null},{\"name\":\"OTHER\",\"dbName\":null}],\"dbName\":null},\"Institutes\":{\"values\":[{\"name\":\"Parul_Institue_of_Engineering_and_Technology\",\"dbName\":null},{\"name\":\"Parul_Institue_of_Technology\",\"dbName\":null},{\"name\":\"Parul_Institue_of_Design\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Management\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Design\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Applied_Sciences\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Medical_Science_and_Research\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Pharmacy_and_Research\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Ayurveda_and_Research\",\"dbName\":null},{\"name\":\"Parul_Institute_of_Hotel_Management_and_Catering_Technology\",\"dbName\":null},{\"name\":\"Parul_Polytechnic_Institute\",\"dbName\":null}],\"dbName\":null},\"Degree\":{\"values\":[{\"name\":\"BTech\",\"dbName\":null},{\"name\":\"MTech\",\"dbName\":null},{\"name\":\"PhD\",\"dbName\":null},{\"name\":\"BSc\",\"dbName\":null},{\"name\":\"MSc\",\"dbName\":null},{\"name\":\"Pharmacy\",\"dbName\":null},{\"name\":\"MBA\",\"dbName\":null}],\"dbName\":null},\"LevelofEduction\":{\"values\":[{\"name\":\"Graduate\",\"dbName\":null},{\"name\":\"PostGraduate\",\"dbName\":null},{\"name\":\"Doctorate\",\"dbName\":null}],\"dbName\":null}},\"types\":{\"Address\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"placeOfWork\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null},{\"name\":\"state\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null},{\"name\":\"city\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[]}}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

